Make the Log Symptoms screen fully dynamic and functionally complete using API and DB integration, while strictly preserving design and avoiding any impact to other screens.

🔧 Functional Requirements:
Symptoms Selection (Checkboxes)

✅ Each symptom (e.g., Headache, Nausea, Fatigue, etc.) should be selectable via UI

🧠 On save, all selected symptoms must be sent to the backend as an array

🛢️ Save selected symptoms in the database under the current user's log

Intensity Slider

✅ User selects severity from 1 (Mild) to 10 (Severe)

🧠 Capture the slider value and store it as part of the log entry

🔢 Store as integer in DB field like intensity_level

When Did This Occur (Timing Section)

✅ Options: “Just now,” “Earlier today,” “Custom time”

🧠 Save timestamp accordingly:

“Just now” → current time (Date.now())

“Earlier today” → store fixed morning/afternoon/evening time (e.g., 9 AM)

“Custom time” → show a time picker and capture user’s input

⏳ Store the selected time in DB with log

Possible Triggers

✅ Multi-select options (Stress, Weather, Food, etc.)

🧠 Save all selected triggers in a triggers array field in DB

Store alongside symptom log

Save Log Button

✅ On click, validate all inputs:

At least one symptom selected

Intensity value set

A time option selected

🔄 Submit payload to API: POST /api/symptoms-log

json
Copy
Edit
{
  "userId": "user123",
  "symptoms": ["Headache", "Light Sensitivity"],
  "intensity": 7,
  "occurredAt": "2025-06-24T14:00:00Z",
  "triggers": ["Stress", "Poor Sleep"]
}
💾 Store in symptom_logs table in DB

✅ Show success toast/snackbar

🔄 On success: redirect to History screen or show confirmation without page reload

📘 Optional Enhancements (but not mandatory):
⏰ If “Custom time” is chosen, add a lightweight time picker component (React Time Picker)

🧠 Store all logs with userId from token or global state

🛡️ Critical Constraints (DO NOT SKIP):
✅ Do NOT change any screen other than Log Symptoms
✅ UI design must remain exactly as per current Figma
✅ Component structure, layout, padding, colors should remain unchanged
✅ Do NOT break any other logging feature like food or daily log
✅ API controller and DB changes must be scoped to symptom logging only
✅ Place new code in a modular way (logSymptom.ts, symptomController.js) to isolate functionality

📦 Deliverables Checklist:
 Functional symptom multi-select

 Intensity slider capture

 Timing section with custom time support

 Trigger multi-select save

 Full API submission and DB write

 Redirect or confirmation after success

 Design untouched

 Other screens unaffected

